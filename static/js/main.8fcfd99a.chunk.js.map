{"version":3,"sources":["components/Messages.js","components/Utils.js","components/HeaderSlim.js","components/Header.js","components/Index.js","components/Footer.js","components/constants.js","components/api.js","components/AlertBox.js","components/Login.js","components/Network.js","components/Proxy.js","components/Checkbox.js","components/Time.js","App.js","index.js"],"names":["T","message","Messages","parseRoute","parts","window","location","pathname","split","length","section","sectionId","subsection","checkSession","username","Cookies","get","sessionId","console","log","formatError","data","code","links","HeaderSlim","props","state","l","this","key","className","role","href","id","class","src","alt","width","map","active","link","renderLoginOut","Component","Header","Index","token","renderLogin","Footer","Constants","baseUrl","protocol","hostname","port","LoadingImage","service","loginRequest","query","cancelCallback","axios","post","constants","networkGet","networkUpdate","iface","proxyGet","proxyUpdate","timeGet","timeUpdate","t","ntp","time","timezone","AlertBox","c","type","Login","handleMacAddressChange","e","preventDefault","setState","macAddress","target","value","handleSubmit","login","error","api","then","response","u","s","set","catch","renderError","for","name","onChange","onClick","methods","Network","getNetworkConfig","interfaces","selected","getInterface","interface","handleSelectTab","getAttribute","handleUseChange","use","handleMethodChange","method","handleGatewayChange","gateway","handleAddressChange","address","handleMaskChange","mask","handleDNSChange","nameServers","handleSave","matches","filter","i","data-key","tabindex","aria-controls","aria-selected","renderMessage","renderUse","disabled","htmlFor","m","toString","placeholder","Proxy","getProxyConfig","proxy","handleHTTPChange","http","handleHTTPSChange","https","handleFTPChange","ftp","Checkbox","handleUnchecked","handleChecked","checked","label","Time","getTimeConfig","handleTimezoneChange","setField","handleNTPChange","handleTimeChange","timezones","field","history","createHistory","App","scrollTo","r","renderNetwork","renderProxy","renderTime","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8fcfd99a.chunk.js","sourcesContent":["/*\n * Ubuntu Core Configuration\n * Copyright 2020 Canonical Ltd.  All rights reserved.\n *\n */\n\nexport default {\n    'address': 'Address',\n    'address-help': 'IP address of the interface',\n    'copyright': '© 2020 Canonical Ltd. Ubuntu and Canonical are registered trademarks of Canonical Ltd.',\n    'dhcp': 'DHCP',\n    'dns': 'Name servers (DNS)',\n    'dns-help': 'Comma-separated list of IP addresses',\n    'ftp': 'FTP',\n    'gateway': 'Gateway',\n    'get-started': 'Get Started',\n    'http': 'HTTP',\n    'https': 'HTTPS',\n    'interface': 'Interface',\n    'interface-updated': 'The interface was updated successfully',\n    'legal': 'Legal information',\n    'login': 'Login',\n    'login-description': 'Login to configure the device.',\n    'logout': 'Logout',\n    'manual': 'Manual',\n    'mask': 'Subnet mask',\n    'method': 'Method',\n    'network': 'Network',\n    'network-config': 'Network Configuration',\n    'ntp': 'Synchronize system clock ',\n    'proxy': 'Proxy',\n    'proxy-config': 'Proxy Configuration',\n    'proxy-help': 'IP address and port',\n    'proxy-updated': 'Submitted request to update proxy settings',\n    'report-a-bug': 'Report a bug on this site',\n    'save': 'Save',\n    'select-interface': 'Select an interface',\n    'site-description1': `Configure the network interfaces`,\n    'site-description2': `Configure the network proxy settings`,\n    'site-description3': `Set the device time zone`,\n    'site-description4': `Configure network time server`,\n    'subtitle': 'Configuration service for Ubuntu Core devices.',\n    'time': 'Time',\n    'timezone': 'Time zone',\n    'time-config': 'Time Configuration',\n    'title': 'Ubuntu Core Configuration',\n    'use': 'Use the interface',\n}","/*\n * Ubuntu Core Configuration\n * Copyright 2020 Canonical Ltd.  All rights reserved.\n *\n */\n\nimport Messages from './Messages'\nimport Cookies from 'js-cookie'\n\nexport function T(message) {\n    const msg = Messages[message] || message;\n    return msg\n}\n\n// URL is in the form:\n//  /section\n//  /section/sectionId\n//  /section/sectionId/subsection\nexport function parseRoute() {\n    const parts = window.location.pathname.split('/')\n\n    switch (parts.length) {\n        case 2:\n            return {section: parts[1]}\n        case 3:\n            return {section: parts[1], sectionId: parts[2]}\n        case 4:\n            return {section: parts[1], sectionId: parts[2], subsection: parts[3]}\n        default:\n            return {}\n    }\n}\n\nexport function checkSession() {\n    let username = Cookies.get('username')\n    let sessionId = Cookies.get('sessionID')\n\n    console.log(\"Username/Session:\", username, sessionId)\n\n    if ((username) && (sessionId)) {\n        return true\n    }\n    return false\n}\n\nexport function setSession(u, s) {\n    Cookies.set('username', u)\n    Cookies.set('sessionID', s)\n}\n\nexport function formatError(data) {\n    let message = T(data.code);\n    if (data.message) {\n        message += ': ' + data.message;\n    }\n    return message;\n}\n","// Ubuntu Core Configuration\n// Copyright 2020 Canonical Ltd.  All rights reserved.\n\n\nimport React, { Component } from 'react';\nimport {checkSession, T} from \"./Utils\";\n\n\nconst links = ['network','proxy','time'];\n\nclass HeaderSlim extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {};\n    }\n\n    link(l) {\n        if (this.props.sectionId) {\n            // This is the secondary menu\n            return '/' + this.props.section + '/' + this.props.sectionId + '/' + l;\n        } else {\n            return '/' + l;\n        }\n    }\n\n    renderLoginOut() {\n        if (checkSession()) {\n            return <li key={'logout'} className=\"p-navigation__link\" role=\"menuitem\"><a href=\"/logout\">{T(\"logout\")}</a></li>\n        } else {\n            return <li key={'login'} className=\"p-navigation__link\" role=\"menuitem\"><a href=\"/login\">{T(\"login\")}</a></li>\n        }\n    }\n\n    render() {\n        return (\n            <header id=\"navigation\" class=\"p-navigation header-slim\">\n                <div className=\"p-navigation__banner row\">\n                    <div className=\"p-navigation__logo\">\n                        <div className=\"u-vertically-center\">\n                            <a href=\"/\" className=\"p-navigation__link\">\n                                <img src=\"/static/images/logo.png\" alt=\"ubuntu\" width=\"150px\"  />\n                            </a>\n                        </div>\n                    </div>\n\n                    <nav className=\"p-navigation__nav\">\n                        <span className=\"u-off-screen\"><a href=\"#navigation\">Jump to site</a></span>\n                        <ul className=\"p-navigation__links\" role=\"menu\">\n                            {links.map((l) => {\n                                var active = '';\n                                if ((this.props.section === l) || (this.props.subsection === l)) {\n                                    active = ' active'\n                                }\n                                return (\n                                    <li key={l} className={'p-navigation__link' + active} role=\"menuitem\"><a href={this.link(l)}>{T(l)}</a></li>\n                                )\n                            })}\n                            {this.renderLoginOut()}\n                        </ul>\n                    </nav>\n                </div>\n            </header>\n        );\n    }\n}\n\nexport default HeaderSlim;","// Ubuntu Core Configuration\n// Copyright 2020 Canonical Ltd.  All rights reserved.\n\n\nimport React, { Component } from 'react';\nimport HeaderSlim from \"./HeaderSlim\";\nimport {T} from './Utils'\n\n\nclass Header extends Component {\n    render() {\n        return (\n            <div>\n                <HeaderSlim section={this.props.section} subsection={this.props.subsection} sectionId={this.props.sectionId} />\n                <section className=\"p-strip--image is-dark header\">\n                    <div className=\"row\">\n                        <div className=\"col-5 title\">\n                            <h1>{T('title')}</h1>\n                            <p>{T('subtitle')}</p>\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default Header;\n","// Ubuntu Core Configuration\n// Copyright 2020 Canonical Ltd.  All rights reserved.\n\nimport React, {Component} from 'react';\nimport {T, checkSession} from './Utils'\n\nclass Index extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            token: props.token || {},\n        }\n    }\n\n    renderLogin() {\n        if (!checkSession()) {\n            return <a className=\"p-button--brand\" href=\"/login\" alt=\"\">{T('login')}</a>\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n\n                <section className=\"row\">\n                    <div className=\"row\">\n                        <div className=\"first\">\n                            <h2>{T('get-started')}</h2>\n                            <ul className=\"p-list\">\n                                <li className=\"p-list__item is-ticked\">{T('site-description1')}</li>\n                                <li className=\"p-list__item is-ticked\">{T('site-description2')}</li>\n                                <li className=\"p-list__item is-ticked\">{T('site-description3')}</li>\n                                <li className=\"p-list__item is-ticked\">{T('site-description4')}</li>\n                            </ul>\n                            {this.renderLogin()}\n                        </div>\n                    </div>\n                </section>\n            </div>\n        );\n    }\n}\n\nexport default Index;","/*\n * Ubuntu Core Configuration\n * Copyright 2020 Canonical Ltd.  All rights reserved.\n *\n */\n\nimport React, {Component} from 'react';\nimport {T} from './Utils'\n\nclass Footer extends Component {\n    render() {\n        return (\n            <div id=\"footer\">\n                <div className=\"row footer\">\n                    <p>{T('copyright')}</p>\n                    <nav className=\"p-footer__nav\" role=\"navigation\">\n                        <ul className=\"p-footer__links\">\n                            <li className=\"p-footer__item\">\n                                <a className=\"p-footer__link\" href=\"https://ubuntu.com/legal\">{T('legal')}</a>\n                            </li>\n                            <li className=\"p-footer__item\">\n                                <a className=\"p-footer__link\" href=\"https://ubuntu.com/legal/data-privacy\">{T('privacy')}</a>\n                            </li>\n                            <li className=\"p-footer__item\">\n                                <a className=\"p-footer__link\" href=\"https://github.com/CanonicalLtd/imagebuild/issues/new\">{T('report-a-bug')}</a>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Footer;","/*\n * Ubuntu Core Configuration\n * Copyright 2020 Canonical Ltd.  All rights reserved.\n *\n */\n\nconst API_PREFIX = '/v1/'\n\nfunction getBaseURL() {\n    return window.location.protocol + '//' + window.location.hostname + ':' + window.location.port + API_PREFIX;\n}\n\nlet Constants = {\n    baseUrl: getBaseURL(),\n    LoadingImage: '/static/images/ajax-loader.gif',\n    //missingIcon: '/static/images/snapcraft-missing-icon.svg',\n}\n\nexport default Constants","/*\n * Ubuntu Core Configuration\n * Copyright 2020 Canonical Ltd.  All rights reserved.\n *\n */\n\nimport axios from 'axios'\nimport constants from './constants'\n\nlet service = {\n    loginRequest:  (query, cancelCallback) => {\n        return axios.post(constants.baseUrl + 'login', query);\n    },\n\n    networkGet: () => {\n        return axios.get(constants.baseUrl + 'network');\n    },\n\n    networkUpdate: (iface) => {\n        return axios.post(constants.baseUrl + 'network', iface);\n    },\n\n    proxyGet: () => {\n        return axios.get(constants.baseUrl + 'proxy');\n    },\n\n    proxyUpdate: (iface) => {\n        return axios.post(constants.baseUrl + 'proxy', iface);\n    },\n\n    timeGet: () => {\n        return axios.get(constants.baseUrl + 'time');\n    },\n\n    timeUpdate: (t) => {\n        return axios.post(constants.baseUrl + 'time', {ntp: t.ntp, time: t.time, timezone: t.timezone});\n    },\n\n}\n\nexport default service","/*\n * Ubuntu Core Configuration\n * Copyright 2020 Canonical Ltd.  All rights reserved.\n *\n */\n\nimport React, {Component} from 'react';\n\n\nclass AlertBox extends Component {\n    render() {\n        if (this.props.message) {\n            var c = 'p-notification--';\n            if (this.props.type) {\n                c = c + this.props.type;\n            } else {\n                c = c + 'negative';\n            }\n\n            return (\n                <div className={c}>\n                    <p className=\"p-notification__response\">{this.props.message}</p>\n                </div>\n            );\n        } else {\n            return <span />;\n        }\n    }\n}\n\nexport default AlertBox;","/*\n * Ubuntu Core Configuration\n * Copyright 2020 Canonical Ltd.  All rights reserved.\n *\n */\n\nimport React, { Component } from 'react';\nimport api from './api';\nimport {T, setSession} from './Utils';\nimport AlertBox from './AlertBox';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            macAddress: '',\n            error: '',\n        };\n    }\n\n    handleMacAddressChange = (e) => {\n        e.preventDefault()\n        this.setState({macAddress: e.target.value})\n    }\n\n    login() {\n        api.loginRequest({macAddress: this.state.macAddress}).then(response => {\n            if (!response.data.code) {\n                setSession(response.data.username, response.data.sessionId)\n                window.location.href = \"/\"\n                return\n            }\n\n            this.setState({error: T(response.data.code) + \": \" + response.data.message})\n        }).catch(e => {\n            console.log(e.response)\n            this.setState({error: T(e.response.data.code) + \": \" + e.response.data.message})\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.login()\n    }\n\n    renderError() {\n        if (this.state.error) {\n            return (\n                <AlertBox message={this.state.error} />\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <h2>{T(\"login\")}</h2>\n                    <p>{T(\"login-description\")}</p>\n                </div>\n\n                {this.renderError()}\n                <form>\n                    <label for=\"macaddress\">MAC Address:</label>\n                    <input name=\"macaddress\" type=\"text\" value={this.state.macAddress} onChange={this.handleMacAddressChange} />\n                    <button className=\"p-button--positive\" onClick={this.handleSubmit}>{T(\"submit\")}</button>\n                </form>\n\n            </div>\n        );\n    }\n}\n\nexport default Login;","/*\n * Ubuntu Core Configuration\n * Copyright 2020 Canonical Ltd.  All rights reserved.\n *\n */\n\nimport React, { Component } from 'react';\nimport {formatError, T} from './Utils';\nimport AlertBox from './AlertBox';\nimport api from \"./api\"\n\nconst methods = ['dhcp', 'manual']\n\nclass Network extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            selected: null,\n            interfaces: [],\n            interface: {},\n            error: '',\n            message: '',\n        };\n    }\n\n    componentDidMount() {\n        this.getNetworkConfig()\n    }\n\n    getNetworkConfig = () => {\n        api.networkGet().then(response => {\n            this.setState({interfaces: response.data.interfaces, error: ''})\n            if ((!this.state.selected) && (response.data.interfaces.length > 0)) {\n\n                this.getInterface(response.data.interfaces[0].interface)\n                this.setState({selected: response.data.interfaces[0].interface})\n            }\n        })\n        .catch(e => {\n            this.setState({message: formatError(e.response)});\n        })\n    }\n\n    handleSelectTab = (e) => {\n        e.preventDefault()\n        let iface = e.target.getAttribute('data-key')\n        this.getInterface(iface)\n        this.setState({selected: iface, error: '', message:''})\n    }\n\n    handleUseChange = (e) => {\n        e.preventDefault()\n        let iface = this.state.interface\n        iface.use = !iface.use\n        this.setState({interface: iface})\n    }\n\n    handleMethodChange = (e) => {\n        e.preventDefault()\n        let iface = this.state.interface\n        iface.method = e.target.value\n        this.setState({interface: iface})\n    }\n\n    handleGatewayChange = (e) => {\n        e.preventDefault()\n        let iface = this.state.interface\n        iface.gateway = e.target.value\n        this.setState({interface: iface})\n    }\n\n    handleAddressChange = (e) => {\n        e.preventDefault()\n        let iface = this.state.interface\n        iface.address = e.target.value\n        this.setState({interface: iface})\n    }\n\n    handleMaskChange = (e) => {\n        e.preventDefault()\n        let iface = this.state.interface\n        iface.mask = e.target.value\n        this.setState({interface: iface})\n    }\n\n    handleDNSChange = (e) => {\n        e.preventDefault()\n        let iface = this.state.interface\n        iface.nameServers = e.target.value.split(',')\n        this.setState({interface: iface})\n    }\n\n    handleSave = (e) => {\n        e.preventDefault()\n\n        // Save the interface config\n        api.networkUpdate(this.state.interface).then(response => {\n            this.getNetworkConfig()\n            this.setState({message: T('interface-updated'), error: ''})\n        })\n        .catch(e => {\n            this.setState({error: formatError(e.response), message: ''});\n        })\n    }\n\n    getInterface(iface) {\n        let matches = this.state.interfaces.filter(i => {\n            return i.interface===iface\n        })\n        if (matches.length>0) {\n            this.setState({interface: matches[0]})\n        }\n    }\n\n    renderUse() {\n        if (this.state.interface.use) {\n            return (\n                <div>\n                    <a href=\"#use\" className=\"p-button--base has-icon\" onClick={this.handleUseChange}><img src=\"/static/images/checkbox_checked_16.png\" alt=\"checked\" /></a>\n                    <span>{T('use')}</span>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <a href=\"#use\" className=\"p-button--base has-icon\" onClick={this.handleUseChange}><img src=\"/static/images/checkbox_unchecked_16.png\" alt=\"unchecked\"  /></a>\n                    <span>{T('use')}</span>\n                </div>\n            )\n        }\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return <AlertBox type=\"positive\" message={this.state.message}/>\n        }\n    }\n\n    renderError() {\n        if (this.state.error) {\n            return <AlertBox message={this.state.error}/>\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>{T('network-config')}</h2>\n\n                <section className=\"row\">\n                    <div>\n                        <nav className=\"p-tabs\">\n                            <ul className=\"p-tabs__list\" role=\"tablist\">\n                            {this.state.interfaces.map((iface) => {\n                                let selected = \"false\"\n                                if (this.state.selected===iface.interface) {\n                                    selected = \"true\"\n                                }\n                                return (<li className=\"p-tabs__item\" role=\"presentation\">\n                                    <a href={'#'+iface.interface} data-key={iface.interface} onClick={this.handleSelectTab} class=\"p-tabs__link\" tabindex=\"0\" role=\"tab\" aria-controls=\"section1\" aria-selected={selected}>{iface.interface}</a>\n                                </li>)\n                            })}\n                            </ul>\n                        </nav>\n                    </div>\n                    <div>\n                        {this.renderMessage()}\n                        {this.renderError()}\n                        {this.state.interface.interface ?\n                            <form>\n                                {this.renderUse()}\n                                <fieldset disabled={!this.state.interface.use}>\n                                    <h3>{T('interface')} {this.state.interface.interface}</h3>\n                                    <label htmlFor={\"method\"}>{T('method')}:</label>\n                                    <select value={this.state.interface.method} onChange={this.handleMethodChange}>\n                                        <option/>\n                                        {methods.map((m) => {\n                                            return <option value={m}>{T(m)}</option>\n                                        })}\n                                    </select>\n                                    <label htmlFor={\"nameServers\"}>{T('dns')}:</label>\n                                    <input name=\"nameServers\" type=\"text\" onChange={this.handleDNSChange}\n                                           value={this.state.interface.nameServers ? this.state.interface.nameServers.toString() : ''} placeholder={T('dns-help')} />\n                                    <label htmlFor={\"address\"}>{T('address')}:</label>\n                                    <input name=\"address\" type=\"text\" value={this.state.interface.address} placeholder={T('address-help')} onChange={this.handleAddressChange}/>\n                                    <label htmlFor={\"mask\"}>{T('mask')}:</label>\n                                    <input name=\"mask\" type=\"text\" value={this.state.interface.mask} onChange={this.handleMaskChange}/>\n                                    <label for={\"gateway\"}>{T('gateway')}:</label>\n                                    <input name=\"gateway\" type=\"text\" value={this.state.interface.gateway} onChange={this.handleGatewayChange}/>\n                                    <button onClick={this.handleSave} className=\"p-button--positive\">{T('save')}</button>\n                                </fieldset>\n                            </form>\n                            :\n                            <h4>{T('select-interface')}</h4>\n                        }\n                    </div>\n                </section>\n            </div>\n        )\n    }\n\n}\n\nexport default Network;","/*\n * Ubuntu Core Configuration\n * Copyright 2020 Canonical Ltd.  All rights reserved.\n *\n */\n\nimport React, {Component} from 'react';\nimport {formatError, T} from \"./Utils\";\nimport AlertBox from \"./AlertBox\";\nimport api from \"./api\";\n\nclass Proxy extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            proxy: {},\n            error: '',\n            message: '',\n        };\n    }\n\n    componentDidMount() {\n        this.getProxyConfig()\n    }\n\n    getProxyConfig = () => {\n        api.proxyGet().then(response => {\n            this.setState({proxy: response.data.proxy, message: ''})\n        })\n        .catch(e => {\n            this.setState({message: formatError(e.response)});\n        })\n    }\n\n    handleHTTPChange = (e) => {\n        e.preventDefault()\n        let iface = this.state.proxy\n        iface.http = e.target.value\n        this.setState({proxy: iface})\n    }\n\n    handleHTTPSChange = (e) => {\n        e.preventDefault()\n        let iface = this.state.proxy\n        iface.https = e.target.value\n        this.setState({proxy: iface})\n    }\n\n    handleFTPChange = (e) => {\n        e.preventDefault()\n        let iface = this.state.proxy\n        iface.ftp = e.target.value\n        this.setState({proxy: iface})\n    }\n\n    handleSave = (e) => {\n        e.preventDefault()\n\n        // Save the proxy config\n        api.proxyUpdate(this.state.proxy).then(response => {\n            this.setState({message: T('proxy-updated'), error: ''})\n        })\n        .catch(e => {\n            this.setState({error: formatError(e.response), message: ''});\n        })\n    }\n\n\n    renderMessage() {\n        if (this.state.message) {\n            return <AlertBox type=\"positive\" message={this.state.message}/>\n        }\n    }\n\n    renderError() {\n        if (this.state.error) {\n            return <AlertBox message={this.state.error}/>\n        }\n    }\n    render() {\n        return (\n            <div>\n                <h2>{T('proxy-config')}</h2>\n\n                <section className=\"row\">\n                    {this.renderMessage()}\n                    {this.renderError()}\n                    <form>\n                        <fieldset>\n                        <label htmlFor={\"http\"}>{T('http')}:</label>\n                        <input name=\"http\" type=\"text\" value={this.state.proxy.http} onChange={this.handleHTTPChange}\n                            placeholder={T('proxy-help')}/>\n                        <label htmlFor={\"https\"}>{T('https')}:</label>\n                        <input name=\"https\" type=\"text\" value={this.state.proxy.https} onChange={this.handleHTTPSChange}\n                               placeholder={T('proxy-help')}/>\n                        <label htmlFor={\"ftp\"}>{T('ftp')}:</label>\n                        <input name=\"ftp\" type=\"text\" value={this.state.proxy.ftp} onChange={this.handleFTPChange}\n                               placeholder={T('proxy-help')}/>\n\n                        <button onClick={this.handleSave} className=\"p-button--positive\">{T('save')}</button>\n                        </fieldset>\n                    </form>\n                </section>\n\n            </div>\n        );\n    }\n}\n\nexport default Proxy;","/*\n * Ubuntu Core Configuration\n * Copyright 2020 Canonical Ltd.  All rights reserved.\n *\n */\n\nimport React, { Component } from 'react';\nimport {T} from \"./Utils\";\n\nclass Checkbox extends Component {\n    handleUnchecked  = (e) => {\n        e.preventDefault()\n        this.props.onChange(false)\n    }\n\n    handleChecked  = (e) => {\n        e.preventDefault()\n        this.props.onChange(true)\n    }\n\n    render() {\n        if (this.props.checked) {\n            return (\n                <div>\n                    <a href=\"#select\" className=\"p-button--base has-icon\" onClick={this.handleUnchecked}><img src=\"/static/images/checkbox_checked_16.png\" alt=\"checked\" /></a>\n                    <span>{T(this.props.label)}</span>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <a href=\"#select\" className=\"p-button--base has-icon\" onClick={this.handleChecked}><img src=\"/static/images/checkbox_unchecked_16.png\" alt=\"unchecked\"  /></a>\n                    <span>{T(this.props.label)}</span>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Checkbox;","/*\n * Ubuntu Core Configuration\n * Copyright 2020 Canonical Ltd.  All rights reserved.\n *\n */\n\n\nimport React, {Component} from 'react';\nimport api from \"./api\";\nimport {formatError, T} from \"./Utils\";\nimport AlertBox from \"./AlertBox\";\nimport Checkbox from \"./Checkbox\";\n\nclass Time extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            time: {timezones: []},\n            error: '',\n            message: '',\n        };\n    }\n\n    componentDidMount() {\n        this.getTimeConfig()\n    }\n\n    getTimeConfig = () => {\n        api.timeGet().then(response => {\n            this.setState({time: response.data.time, error: ''})\n        })\n        .catch(e => {\n            this.setState({message: formatError(e.response)});\n        })\n    }\n\n    setField(field, value) {\n        let t = this.state.time\n        t[field] = value\n        this.setState({time: t})\n    }\n\n    handleTimezoneChange = (e) => {\n        e.preventDefault()\n        this.setField('timezone', e.target.value)\n    }\n\n    handleNTPChange = (value) => {\n        this.setField('ntp', value)\n    }\n\n    handleTimeChange = (e) => {\n        e.preventDefault()\n        this.setField('time', e.target.value)\n    }\n\n    handleSave = (e) => {\n        e.preventDefault()\n\n        // Save the time config\n        api.timeUpdate(this.state.time).then(response => {\n            this.getTimeConfig()\n            this.setState({message: T('time-updated'), error: ''})\n        })\n        .catch(e => {\n            this.setState({error: formatError(e.response), message: ''});\n        })\n    }\n\n    renderMessage() {\n        if (this.state.message) {\n            return <AlertBox type=\"positive\" message={this.state.message}/>\n        }\n    }\n\n    renderError() {\n        if (this.state.error) {\n            return <AlertBox message={this.state.error}/>\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                <h2>{T('time-config')}</h2>\n\n                <section className=\"row\">\n                    {this.renderMessage()}\n                    {this.renderError()}\n                    <form>\n                        <fieldset>\n                            <label htmlFor={\"timezone\"}>{T('timezone')}:</label>\n                            <select value={this.state.time.timezone} onChange={this.handleTimezoneChange} placeholder={T('timezone-help')}>\n                                <option/>\n                                {this.state.time.timezones.map((m) => {\n                                    return <option value={m}>{T(m)}</option>\n                                })}\n                            </select>\n\n                            <Checkbox label={T('ntp')} checked={this.state.time.ntp} onChange={this.handleNTPChange} />\n                            <label htmlFor={\"time\"}>{T('time')}:</label>\n                            <input name=\"time\" type=\"text\" value={this.state.time.time} onChange={this.handleTimeChange}\n                                   placeholder={T('time-help')} disabled={this.state.time.ntp}/>\n\n                            <button onClick={this.handleSave} className=\"p-button--positive\">{T('save')}</button>\n                        </fieldset>\n                    </form>\n                </section>\n            </div>\n        );\n    }\n}\n\n\nexport default Time;\n","// Ubuntu Core Configuration\n// Copyright 2020 Canonical Ltd.  All rights reserved.\n\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport HeaderSlim from './components/HeaderSlim';\nimport Index from './components/Index';\nimport Footer from './components/Footer';\nimport Login from './components/Login';\nimport {parseRoute} from './components/Utils'\n\nimport createHistory from 'history/createBrowserHistory'\nimport Network from \"./components/Network\";\nimport Proxy from \"./components/Proxy\";\nimport Time from \"./components/Time\";\nconst history = createHistory()\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n        location: history.location,\n        token: props.token || {},\n        proxy: {},\n    }\n  }\n\n  handleNavigation(location) {\n    this.setState({ location: location })\n    window.scrollTo(0, 0)\n  }\n\n  // Get the data that's conditional on the route\n  updateDataForRoute() {\n      const r = parseRoute()\n\n      if(r.section==='network') {this.getNetworkConfig()}\n  }\n\n  renderLogin() {\n      return <Login />\n  }\n\n  renderNetwork(sectionId, subsection) {\n      if (!sectionId) {\n          return <Network />\n      }\n  }\n\n  renderProxy(sectionId, subsection) {\n    if (!sectionId) {\n        return <Proxy />\n    }\n  }\n\n  renderTime(sectionId, subsection) {\n    if (!sectionId) {\n        return <Time />\n    }\n  }\n\n  render() {\n    const r = parseRoute()\n    console.log(r)\n\n    return (\n        <div className=\"App\">\n          {r.section===''? <Header section={r.section} subsection={r.subsection} sectionId={r.sectionId} /> : ''}\n          {r.section!==''? <HeaderSlim section={r.section} subsection={r.subsection} sectionId={r.sectionId} /> : ''}\n\n          <div className=\"content row\">\n            {r.section===''? <Index /> : ''}\n            {r.section==='login'? this.renderLogin() : ''}\n            {r.section==='network'? this.renderNetwork(r.sectionId, r.subsection) : ''}\n            {r.section==='proxy'? this.renderProxy(r.sectionId, r.subsection) : ''}\n            {r.section==='time'? this.renderTime(r.sectionId, r.subsection) : ''}\n          </div>\n\n          <Footer />\n        </div>\n    );\n  }\n\n}\n\nexport default App;\n","// Ubuntu Core Configuration\n// Copyright 2020 Canonical Ltd.  All rights reserved.\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}